@inject Microsoft.AspNetCore.Identity.UserManager<ChatUser> _userManager
@inject Microsoft.AspNetCore.Identity.SignInManager<ChatUser> _signInManager

@{
    ViewData["Title"] = "Home - ChatApp";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    html {
        height: 100%;
    }

    body {
        height: 100%;
        overflow: hidden;
        display: flex;
        flex-direction: column;
    }

    main {
        flex: 1;
    }
</style>


@if (!_signInManager.IsSignedIn(User))
{
    <div class="text-center">
        <h1 class="display-4">Welcome</h1>
        <p>Please <a asp-controller="Account" asp-action="Login">login</a> to see online friends.</p>
    </div>
}
else
{

    @section Scripts
{
        <script>
            var _currentFriendID = 0;
            var _conversations = new Object();

            //Event Handlers
            function AddFriend_Click() {
                $.post("/Friends/Add", { Username: $("#AddFriendUsername").val() }, function (result) {
                    if (result !== "")
                        alert(result);
                });
            }

            function FriendListItem_Clicked(object) {
                OpenFriendChat($(object).attr("data-id"));
            }

            function btnSend_Click(object) {
                $("#txtMessageInput").focus();
                var data = new Object();
                data.ConversationID = _currentConversationID;
                data.Message = $("#txtMessageInput").val();
                $.post("/messages/sendmessage", data);
            }


            //User functions
            async function OpenFriendChat(friendID) {
                alert("fix friend ID here");

                $("#ChatPanel").children().remove();

                _currentFriendID = await GetConversationID(friendID);

                await GetMessagesForCurrentChat();

                DisplayMessagesForCurrentChat();
            }

            function GetMessagesForCurrentChat() {
                return new Promise(resolve => {

                    $.getJSON("/messages/getmessages?conversationid=" + _currentConversationID, function (messages) {
                        if (_conversations[_currentConversationID] == null)
                            _conversations[_currentConversationID] = new Object();

                        messages.forEach(function (m) {
                            if (_conversations[_currentConversationID][m.id] != null)
                                return;

                            _conversations[_currentConversationID][m.id] = new Object();
                            _conversations[_currentConversationID][m.id].sid = m.senderID;
                            _conversations[_currentConversationID][m.id].msg = m.contents;
                            _conversations[_currentConversationID][m.id].ts = m.timestamp;
                        });

                        resolve();
                    });
                });
            }

            function GetNewMessages() {
                $.get("/messages/getnewmessages", function (result) {
                    result.forEach(function (msg) {
                        var id = msg.senderID;
                        var row = $(".friendListItem[data-id=" + id + "]");
                        row.css("font-weight", "bold");
                        
                    });
                });
            }

            function UpdateFriendList() {
                $.getJSON("/Friends/GetFriends").done(function (result) {
                    var friendList = $("#FriendList");
                    friendList.children().not("#FriendRowTemplate").remove();
                    var template = $("#FriendRowTemplate");

                    result.forEach(function (current) {
                        var newRow = template.clone();
                        newRow.removeAttr("id");
                        newRow.addClass("friendListItem");
                        newRow.css("display", "initial");
                        newRow.text(current["username"]);
                        newRow.attr("data-id", current.id);
                        friendList.append(newRow);
                    });
                });
            }

            function DisplayMessagesForCurrentChat() {

            }


            $(document).ready(function () {
                $.post("/Account/UpdateActiveTime");
                UpdateFriendList();


                setInterval(function () {
                    $.post("/Account/UpdateActiveTime");
                }, 30000)

                setInterval(function () {
                    UpdateFriendList();
                }, 60000);

                GetNewMessages();
            });

        </script>
    }

    <style>
        .chatContainer {
            height: 95%;
            display: flex;
            flex-direction: column;
            flex: 1 1 auto;
        }

        .messageLine {
            display: flex;
            flex-direction: row;
            margin-bottom:5%;
        }

        .userMessageSpacer {
            flex-shrink: 1;
            flex-grow: 1;
            display: block;
        }

        .message {
            padding: 10px 20px 10px 20px;
            border-radius:48px;
            min-width:4%;
            text-align:center;
            max-width:75%;
            text-align:left;
        }

        .userMessage {
            margin-right: 2%;
            background-color: deepskyblue;
            color: white;
            flex-direction: row-reverse;
        }

        .friendMessage {
            margin-left: 2%;
            background-color: #e5e5e5;
            color: black;
        }
    </style>

    <div class="row h-100">
        <div class="col-4 col-md-3 border-right">
            <div class="pl-2">
                <div class="form-inline input-group">
                    <input id="AddFriendUsername" class="form-control" type="text" name="AddFriendUsername" placeholder="Username" />
                    <button class="btn btn-primary" onclick="AddFriend_Click()">Add User</button>
                </div>

                <div class="card">
                    <div class="card-header">
                        Friends
                    </div>
                    <ul id="FriendList" class="list-group list-group-flush">
                        <li id="FriendRowTemplate" class="list-group-item" style="display:none;cursor:pointer" onclick="FriendListItem_Clicked(this)"></li>

                    </ul>
                </div>
            </div>

        </div>
        <div class="col-8 col-md-9 pl-0 d-flex flex-column mb-2">
            <div id="ChatPanel" class="chatContainer">
                <div class="messageLine">
                    <div class="userMessageSpacer"></div>
                    <div class="message userMessage">Hello</div>
                </div>

                <div class="messageLine">
                    <div class="message friendMessage">
                        Hello there
                    </div>
                </div>

                <div class="messageLine">
                    <div class="userMessageSpacer"></div>
                    <div class="message userMessage">
                        How are you? What time did you want to go the movies? I was thinking about 3.
                    </div>
                </div>

                <div class="messageLine">
                    <div class="message friendMessage">
                        Not too bad and yourself?
                    </div>
                </div>


            </div>
            <div class="mr-3 d-flex">
                <input type="text" id="txtMessageInput" class="form-control flex-grow-1 mr-2" placeholder="Type a message..." autocomplete="off" />
                <button id="btnSendMessage" class="btn-primary form-control" style="max-width:100px;flex-shrink:1;" onclick="btnSend_Click(this)">Send</button>
            </div>
        </div>
    </div>
}

