@inject Microsoft.AspNetCore.Identity.UserManager<ChatUser> _userManager
@inject Microsoft.AspNetCore.Identity.SignInManager<ChatUser> _signInManager

@{
    ViewData["Title"] = "Home - ChatApp";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    html {
        height: 100%;
    }

    body {
        height: 100%;
        overflow: hidden;
        display: flex;
        flex-direction: column;
    }

    main {
        flex: 1;
    }
</style>


@if (!_signInManager.IsSignedIn(User))
{
    <div class="text-center">
        <h1 class="display-4">Welcome</h1>
        <p>Please <a asp-controller="Account" asp-action="Login">login</a> to see online friends.</p>
    </div>
}
else
{

    @section Scripts
{
        <script>
            var _currentConversationID = 0;
            var _conversations = new Object();

            //Event Handlers
            function AddFriend_Click() {
                $.post("/Friends/Add", { Username: $("#AddFriendUsername").val() }, function (result) {
                    if (result !== "")
                        alert(result);
                });
            }

            function FriendListItem_Clicked(object) {
                OpenFriendChat($(object).attr("data-id"));
            }

            function btnSend_Click(object) {
                $("#txtMessageInput").focus();
                var data = new Object();
                data.ConversationID = _currentConversationID;
                data.Message = $("#txtMessageInput").val();
                $.post("/messages/sendmessage", data);
            }


            //User functions
            async function OpenFriendChat(friendID) {
                $("#ChatPanel").children().remove();

                _currentConversationID = await GetConversationID(friendID);

                GetMessagesForCurrentChat();
            }

            function GetMessagesForCurrentChat() {
                var messages = $.getJSON("/messages/getmessages?conversationid=" + _currentConversationID);
                if (_conversations[_currentConversationID] == null)
                    _conversations[_currentConversationID] = new Object();

                foreach(m in messages)
                {
                    if (_conversations[_currentConversationID][m.ID] != null)
                        continue;

                    _conversations[_currentConversationID][m.ID] = new Object();
                    _conversations[_currentConversationID][m.ID].sid = m.SenderID;
                    _conversations[_currentConversationID][m.ID].msg = m.Contents;
                    _conversations[_currentConversationID][m.ID].ts = m.Timestamp;
                }
            }

            function GetConversationID(friendID, resultID) {
                var storageKey = "friend" + friendID + "convID";

                return new Promise(resolve => {
                    var convID = window.localStorage[storageKey];
                    if (convID != null) {
                        resultID = convID;
                        resolve(resultID)
                    }
                    else {
                        $.get("/messages/getconversationid?userid=" + friendID, function (result) {
                            window.localStorage[storageKey] = result;
                            resultID = result;
                            resolve(resultID);
                        });

                    }
                });
            }

            function UpdateFriendList() {
                $.getJSON("/Friends/GetFriends").done(function (result) {
                    var friendList = $("#FriendList");
                    friendList.children().not("#FriendRowTemplate").remove();
                    var template = $("#FriendRowTemplate");

                    result.forEach(function (current) {
                        var newRow = template.clone();
                        newRow.removeAttr("id");
                        newRow.css("display", "initial");
                        newRow.text(current["username"]);
                        newRow.attr("data-id", current.id);
                        friendList.append(newRow);
                    });
                });
            }



            $(document).ready(function () {
                $.post("/Account/UpdateActiveTime");
                UpdateFriendList();


                setInterval(function () {
                    $.post("/Account/UpdateActiveTime");
                }, 30000)

                setInterval(function () {
                    UpdateFriendList();
                }, 60000);
            });

        </script>
    }

    <div class="row h-100">
        <div class="col-2 border-right">
            <div class="pl-2">
                <div class="form-inline input-group">
                    <input id="AddFriendUsername" class="form-control" type="text" name="AddFriendUsername" placeholder="Username" />
                    <button class="btn btn-primary" onclick="AddFriend_Click()">Add User</button>
                </div>

                <div class="card">
                    <div class="card-header">
                        Friends
                    </div>
                    <ul id="FriendList" class="list-group list-group-flush">
                        <li id="FriendRowTemplate" class="list-group-item" style="display:none;cursor:pointer" onclick="FriendListItem_Clicked(this)"></li>

                    </ul>
                </div>
            </div>

        </div>
        <div class="col-10">
            <div style="height:95%" id="ChatPanel">



            </div>
            <div class="mr-3 d-flex">
                <input type="hidden" id="CurrentConversationID" />
                <input type="text" id="txtMessageInput" class="form-control flex-grow-1 mr-2" placeholder="Type a message..." autocomplete="off" />
                <button id="btnSendMessage" class="btn-primary form-control" style="width:10%" onclick="btnSend_Click(this)">Send</button>
            </div>
        </div>
    </div>
}

